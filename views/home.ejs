<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ΑΣΚΗΣΙΣ</title>
  <link rel="stylesheet" href="/c.css">
</head>
<body>
  <header>
    <h1>Η ΑΣΚΗΣΙΣ</h1>
    <p><q>πλέονες ἐξ ἀσκήσιος ἀγαθοί γίνονται ἤ ἀπὸ φύσιος.</q> <span>—Δημόκριτος</span></p>
  </header>

  <main>
    <h2>χαῖρε!</h2>
    <%
    // Only display the form if nothing has been logged yet for today.
    if (todaysRecord.logged === false) {
    %>
    <form action="/" method="POST">
      
      <h3>ἤσκησας σήμερον;</h3>
      <div>
        <input type="radio" name="practiced" id="practiced-true" value="true">
        <label for="practiced-true"><strong>Ναί</strong>, ἤσκησα!</label>
      </div>

      <div>
        <input type="radio" name="practiced" id="practiced-false" value="false">
        <label for="practiced-false"><strong>Οὐχί</strong>, οὐκ ἤσκησα σήμερον.</label>
      </div>

      <div>
        <label for="note">Τὶ ἐποίησας;</label>
        <textarea name="note" id="note" maxlength="100"></textarea>
      </div>

      <button type="submit">προπέμπειν</button>
    </form>
    <% 
    } 

    let streakString;
    if (streak === 0) {
      streakString = "Time to start a new streak!";
    } else if (streak === 1) {
      streakString = "You're at the start of a new streak. Keep it going!";
    } else {
      streakString = "You've practiced for <strong>" + streak + " days</strong> in a row. Keep it up!";
    }
    %>
    <p><%- streakString %></p>

    <%
    const today = new Date();
    const selectedDay = new Date();
    selectedDay.setYear(thisMonthsRecords.year);
    selectedDay.setMonth(thisMonthsRecords.month - 1);
    const calendar = [];

    // We'll need to:
    // 1. Add the trailing days of the previous month, calculating based on the start day of this month.

    const firstDayOfThisMonth = new Date(selectedDay.getFullYear(), selectedDay.getMonth(), 1).getDay();
    const daysInLastMonth = new Date(selectedDay.getFullYear(), selectedDay.getMonth(), 0).getDate();
    const calendarStart = daysInLastMonth - firstDayOfThisMonth + 1; // adjusted for index

    // Build a date string to include in the HTML dataset
    const lastMonth = new Date(selectedDay.getFullYear(), selectedDay.getMonth() - 1).getMonth();
    const lastMonthsYear = new Date(selectedDay.getFullYear(), selectedDay.getMonth() - 1).getFullYear();
    const lastMonthString = lastMonth < 10 ? "0" + (lastMonth + 1) : (lastMonth + 1).toString();
    const lastMonthDateString = `${lastMonthsYear}-${lastMonthString}-`;

    for (let i = calendarStart; i <= daysInLastMonth; i++) {
      let todayString = i < 10 ? "0" + i : i.toString();  // get a two digit date string
      calendar.push({ thisMonth: false, fullDate: `${lastMonthDateString}${todayString}`, day: i });
    }

    // 2. Add the days of this month.
    let thisMonth = selectedDay.getMonth();
    let thisYear = selectedDay.getFullYear();
    let daysInThisMonth = new Date(thisYear, thisMonth + 1, 0).getDate();
    const thisMonthString = thisMonth < 10 ? "0" + (thisMonth + 1) : (thisMonth + 1).toString();
    const thisMonthDateString = `${thisYear}-${thisMonthString}-`;

    // As we go, check against the results of the database query.
    let nextRecordIndex;
    let nextRecord;
    if (thisMonthsRecords.records.length > 0) {
      nextRecordIndex = 0;
      nextRecord = thisMonthsRecords.records[nextRecordIndex];
    } else {
      nextRecord = { day: 0 }
    }

    for (let i = 1; i <= daysInThisMonth; i++) {
      let dayString = i.toString();
      let todayString = i < 10 ? "0" + i : i.toString();  // get a two digit date string
      let thisDate = new Date(selectedDay.getFullYear(), selectedDay.getMonth(), i);

      // If we've got a record for today, add its information...
      if (nextRecord.day === dayString) {
        calendar.push({ 
          thisMonth: true,
          fullDate: `${thisMonthDateString}${todayString}`, 
          day: i,  
          practiced: nextRecord.practiced,
          note: nextRecord.note
        });

        // ...and update our next record info, if other records exist.
        if ((nextRecordIndex + 1) < thisMonthsRecords.records.length) {
          nextRecordIndex++;
          nextRecord = thisMonthsRecords.records[nextRecordIndex];
        }
      } else if (thisDate < today) {  
        calendar.push({ 
          thisMonth: true,
          fullDate: `${thisMonthDateString}${todayString}`, 
          day: i,  
          practiced: false,
          note: ''
        });
      } else {
        calendar.push({ 
          thisMonth: true,
          fullDate: `${thisMonthDateString}${todayString}`, 
          day: i,  
          practiced: null,
          note: ''
        });
      }
    }

    // 3. Add the starting days of next month to round out to a full week.
    let lengthSoFar = calendar.length;  
    let totalDays = Math.ceil(lengthSoFar / 7) * 7; 

    const nextMonth = new Date(selectedDay.getFullYear(), selectedDay.getMonth() + 1).getMonth();
    const nextMonthsYear = new Date(selectedDay.getFullYear(), selectedDay.getMonth() + 1).getFullYear();
    const nextMonthString = nextMonth < 10 ? "0" + (nextMonth + 1) : (nextMonth + 1).toString();
    const nextMonthDateString = `${nextMonthsYear}-${nextMonthString}-`;

    for (let i = 1; i <= totalDays - lengthSoFar; i++) {
      let todayString = i < 10 ? "0" + i : i.toString();  // get a two digit date string
      calendar.push({ thisMonth: false, fullDate: `${nextMonthDateString}${todayString}`, day: i });
    }

    const lastMonthUrl = `/${lastMonthsYear}/${lastMonthString}`;
    const nextMonthUrl = `/${nextMonthsYear}/${nextMonthString}`;
    %>
    <h3 class="calendar-heading">
      <a href="<%= lastMonthUrl %>">«</a>
        <%= selectedDay.toLocaleString('default', { month: 'long', year: 'numeric' }); %>
      <a href="<%= nextMonthUrl %>">»</a>
    </h3>
    <ol class="calendar">
      <% 
      for (let i = 0; i < calendar.length; i++) {
        let css;
        if (calendar[i].practiced === true) {
          css = ' class="practiced"';
        } else if (calendar[i].practiced === false) {
          css = ' class="skipped"';
        }

        if (calendar[i].thisMonth === false) {
          css = ' class="not-this-month"';
        }

        let note;
        if (calendar[i].note) {
          note = `<img src="/img/note.svg" alt="[Practice note]" title="${calendar[i].note}">`;
        }
      %>
        <li data-date="<%= calendar[i].fullDate %>"<%- css %>><%- note %><%= calendar[i].day %></li>
      <% } %>
    </ol>
    <div class="editNote-div">
    </div>
  </main>
  <script src="/misc.js"></script>
</body>
</html>